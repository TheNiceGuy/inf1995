# microcontrolleur à programmer
MCU=atmega324pa

# fréquence du microcontrolleur
FREQUENCY=8000000UL

# vitesse de la connexion UART
BAUD=2400

# horloge du bus I2C/TWI
TWI_CLOCK=100000UL

# executable qui programme le microcontrolleur 
AVRDUDE=avrdude

# programmeur utilisé pour avrdude
PROGRAMMERID=usbasp

# le programme qui compile les instructions
PROGMEM=progmem

# le programme qui interface avec le UART
SERIEVIAUSB=serieViaUSB

# niveau d'optimisation
OPTLEVEL=s

# répertoire contenant les headers
INC=../include

# configuration pour la cible principale
MAIN_NAME=robot
MAIN_TARGET=$(MAIN_NAME).hex
MAIN_DIR=exec

# configuration pour effectuer des tests
TEST_NAME=tests
TEST_TARGET=$(TEST_NAME).hex
TEST_DIR=tests

# configuration pour l'interpréteur d'instructions
INTERPRETER_NAME=interpreter
INTERPRETER_TARGET=$(INTERPRETER_NAME).hex
INTERPRETER_DIR=interpreter

# configururation pour le flasher de mémoire
FLASHER_NAME=flasher
FLASHER_TARGET=$(FLASHER_NAME).hex
FLASHER_DIR=flasher

# configuration pour la librarie
LIB_NAME=statique
LIB_TARGET=lib$(LIB_NAME).a
LIB_DIR=lib

# configuration du compilateur C
CC=avr-gcc
CFLAGS  = -mmcu=$(MCU) -g -O$(OPTLEVEL) -I$(INC)
CFLAGS += -Wall -Wextra
CFLAGS += -fpack-struct -fshort-enums -funsigned-bitfields -funsigned-char -std=c11
CFLAGS += -DF_CPU=$(FREQUENCY)
CFLAGS += -DF_SCL=$(TWI_CLOCK)
CFLAGS += -DBAUD=$(BAUD)

# configuration du compilatuer C++
CXX=avr-g++
CXXFLAGS  = $(CFLAGS)
CXXFLAGS += -fno-exceptions -Wno-write-strings

# configuration de l'éditeur de liens
LD=$(CC)
LDFLAGS=-mmcu=$(MCU) -Wall -Wl,-Map,$(MAIN_NAME).map -L../$(LIB_DIR)
LDLIBS=-lm -l$(LIB_NAME)

# configuration de l'archiveur
AR=avr-ar
ARFLAGS=crs

# configuration pour la copie des binaires
OBJCOPY=avr-objcopy
OBJCOPY_FORMAT=ihex
OBJCOPY_SECTIONS=-j .text -j .data

# configuration pour supprimer des fichiers
REM=rm
REMOPTS=-f

# on n'exécute aucune règle lors de l'inclusion de ce Makefile
all:

# règle générale pour compiler les fichiers *.c
%.o: %.c
	$(CC) -o $@ -c $< $(CFLAGS)

# règle générale pour compiler les fichiers *.cpp
%.o: %.cpp
	$(CXX) -o $@ -c $< $(CXXFLAGS)

# règle générale pour la copie des binaires
%.hex: %.out
	$(OBJCOPY) $(OBJCOPY_SECTIONS) -O $(OBJCOPY_FORMAT) $< $@

.PHONY: all
